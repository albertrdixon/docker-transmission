#!/bin/bash -ex

echo "--> Checking transmission directories ..."
[ -d "$DOWNLOAD_DIR" ] || mkdir -vp "$DOWNLOAD_DIR"
[ -d "$WATCH_DIR" ] || mkdir -vp "$WATCH_DIR"
if [[ -z "$NO_VPN" ]]; then
  [ -d "$OPENVPN_HOME" ] || mkdir -vp "$OPENVPN_HOME"
fi
for d in torrents resume blocklists downloads
do
  [ -d "$TRANSMISSION_HOME/$d" ] || mkdir -vp "$TRANSMISSION_HOME/$d"
done

echo "--> Checking transmission configs ..."
if [ ! -f "$TRANSMISSION_HOME/settings.json" ] || [ "$OVERWRITE" = "true" ]; then
  mv -fv /settings.json "$TRANSMISSION_HOME/settings.json"
fi

if [[ -z "$NO_VPN" ]]; then
  echo "--> Checking openvpn configs ..."
  if [ ! -f "$OPENVPN_HOME/pia.ovpn" ] || [ "$OVERWRITE" = "true" ]; then
    mv -fv /pia.ovpn "$OPENVPN_HOME/pia.ovpn"
  fi
fi

if [[ -z "$NO_VPN" ]]; then
  echo "--> Attempting to get latest PIA certs ..."
  if curl -kL -o /openvpn.zip https://www.privateinternetaccess.com/openvpn/openvpn.zip
  then
    unzip -Lj /openvpn.zip ca.*.crt crl.*.pem -d /openvpn
    mv -vf /openvpn/ca.*.crt /certs/pia.crt
    mv -vf /openvpn/crl.*.pem /certs/pia.pem
    rm -rvf /openvpn.zip
  fi
fi

echo "--> Checking transmission user ..."
if ! id transmission >/dev/null 2>&1; then
  echo "--> Creating transmission user and group ..."
  addgroup -g ${TRANSMISSION_GID} transmission || true
  adduser -s /sbin/nologin -D -H -G transmission -u ${TRANSMISSION_UID} transmission
fi

echo "--> Change ownership to transmission ..."
chown -Rc transmission:transmission \
"$TRANSMISSION_HOME" \
"$TRANSMISSION_WEB_HOME" \
"$OPENVPN_HOME" \
"$DOWNLOAD_DIR" \
"$WATCH_DIR" \

if [[ -z "$NO_VPN" ]]; then
  test -d /dev/net || mkdir -vp /dev/net
  test -c /dev/net/tun || mknod /dev/net/tun c 10 200
  openvpn --mktun --dev tun0
fi

cmd=( transmon --log-level $TRANSMON_LOG_LEVEL --config /transmon.yml )
[[ -n "$COMMAND" ]] && cmd=($COMMAND)
echo "--> cmd: ${cmd[*]}"
exec ${cmd[*]}
