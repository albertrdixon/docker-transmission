#!/bin/bash
set -eo pipefail
trap "exit 0" 2 15
function run_cmd {
  exec $*
}

function main {
  [ -n "$PIA_USER" ] || { echo "Please set PIA_USER to your PIA login"; exit 255; }
  [ -n "$PIA_PASS" ] || { echo "Please set PIA_PASS to your PIA password"; exit 255; }

  [ -d "$TRANSMISSION_HOME" ] || mkdir -p "$TRANSMISSION_HOME"
  [ -d "$OPENVPN_HOME" ] || mkdir -p "$OPENVPN_HOME"
  for dir in blocklists resume torrents downloads
  do
    [ -d "$TRANSMISSION_HOME/$dir" ] || mkdir -p "$TRANSMISSION_HOME/$dir"
  done

  # Generate the PIA client_id
  head -n 100 /dev/urandom | md5sum | tr -d " -" > /pia_client_id

  # Make the transmission monitor config dir
  mkdir -p /etc/pia_transmission_monitor

  # Generate the transmission monitor config from template and env vars
  cat /templates/config.ini.tmpl | envsubst "$(cat /templates/vars.envsubst | tr '\n' ' ')" \
      > "$TRANSMISSION_HOME/config.ini"

  cat /templates/netrc.tmpl | envsubst "$(cat /templates/vars.envsubst | tr '\n' ' ')" \
      > /root/.netrc

  # Generate transmission settings from template and env vars UNLESS already exists
  [ -f "$TRANSMISSION_HOME/settings.json" ] || {
    cat /templates/settings.json.tmpl | envsubst "$(cat /templates/vars.envsubst | tr '\n' ' ')" \
        > "$TRANSMISSION_HOME/settings.json"
  }

  # Generate the PIA credentials file
  echo -e "$PIA_USER\n$PIA_PASS" > /pia.cred

  [ -r "$OPENVPN_HOME/pia.ovpn" ] || mv templates/pia.ovpn "$OPENVPN_HOME/pia.ovpn"
  [ -r "$OPENVPN_HOME/pia.crt" ] || mv templates/pia.crt "$OPENVPN_HOME/pia.crt"

  [ -d "$DOWNLOAD_DIR" ] || mkdir -p "$DOWNLOAD_DIR"
  [ -d /dev/net ] || mkdir -p /dev/net
  [ -c /dev/net/tun ] || mknod /dev/net/tun c 10 200

  if [[ "$1" =~ "bash" ]]; then
    run_cmd "$@"
  else
    run_cmd "python3 -u /usr/local/bin/pia_transmission_monitor"
  fi
}

if [[ "$1" =~ "clean" ]]; then
  run_cmd "/bin/bash"
else
  main "$@"
fi
exit 0